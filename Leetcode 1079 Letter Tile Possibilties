Leetcode 1079 
Problem - Letter Tile Possibilties
Solution 
class Solution {
public:
    int cnt=0;
    void backtrack(unordered_map<char, int>& map)
    {
        for(auto [ch,freq] : map)
        {
            if(freq>0)
            {
            cnt++;
            map[ch]--;
            backtrack(map);
            map[ch]++;
            }
        }
    }
    int numTilePossibilities(string tiles) {
    unordered_map<char,int>map;
    for(char ch : tiles)
    {
        map[ch]++;
    }   
    backtrack(map); 
    return cnt;
    }
};

Description about the problem

🔥 Approach: Backtracking with Frequency Count
This solution efficiently finds all possible tile sequences using backtracking.

1️⃣ Count Character Frequency → A frequency array (counts[26]) tracks occurrences of each letter in tiles.
2️⃣ Backtracking (DFS) → Iterates through available characters, forming unique sequences by decrementing the count, recursively exploring further, and restoring counts after recursion.
3️⃣ Summing Up Possibilities → Every valid sequence is counted as a possibility.

✅ No need for sorting or permutations—this method efficiently generates all possibilities while avoiding duplicates.

💡 Time Complexity: O(∑ (factorial of character counts)), but optimized using pruning.

